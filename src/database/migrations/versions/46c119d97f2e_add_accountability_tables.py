"""Add accountability tables

Revision ID: 46c119d97f2e
Revises: c830807662da
Create Date: 2025-08-28 15:47:55.659725

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '46c119d97f2e'
down_revision = 'c830807662da'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accountability_financials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('financial_year', sa.Integer(), nullable=False),
    sa.Column('financial_period', sa.String(length=20), nullable=False),
    sa.Column('period_start_date', sa.Date(), nullable=False),
    sa.Column('period_end_date', sa.Date(), nullable=False),
    sa.Column('total_rental_income', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('other_income', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_income', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('mortgage_payments', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('property_taxes', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('insurance_costs', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('maintenance_costs', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('utilities', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('hoa_fees', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('property_management_fees', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('other_expenses', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('total_expenses', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('net_income', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('cash_flow', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('roi_percentage', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banking',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('bank_name', sa.String(length=100), nullable=False),
    sa.Column('account_name', sa.String(length=100), nullable=False),
    sa.Column('account_number', sa.String(length=50), nullable=False),
    sa.Column('account_type', sa.String(length=50), nullable=False),
    sa.Column('routing_number', sa.String(length=20), nullable=True),
    sa.Column('current_balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('available_balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('last_reconciliation_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('interest_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.Column('monthly_fee', sa.Numeric(precision=8, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_ledger',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('account_category', sa.String(length=100), nullable=False),
    sa.Column('account_subcategory', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('running_balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('posted_by', sa.String(length=100), nullable=True),
    sa.Column('approved_by', sa.String(length=100), nullable=True),
    sa.Column('approval_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('banking_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('banking_account_id', sa.Integer(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('posted_date', sa.Date(), nullable=False),
    sa.Column('transaction_type', sa.String(length=50), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('balance_after', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.Column('payee', sa.String(length=200), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=True),
    sa.Column('reconciliation_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['banking_account_id'], ['banking.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('banking_transactions')
    op.drop_table('general_ledger')
    op.drop_table('banking')
    op.drop_table('accountability_financials')
    # ### end Alembic commands ###
